//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShareItServices.TransferService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.TransferService.UserInformationDTO[] InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.TransferService.UserInformationDTO[] Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformationDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class UserInformationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.TransferService.UserInformationTypeDTO TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.TransferService.UserInformationTypeDTO Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformationTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    public enum UserInformationTypeDTO : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Firstname = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lastname = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaItemDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class MediaItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.TransferService.MediaItemInformationDTO[] InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.TransferService.UserDTO OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.TransferService.MediaItemTypeDTO TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.TransferService.MediaItemInformationDTO[] Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.TransferService.UserDTO Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.TransferService.MediaItemTypeDTO Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaItemInformationDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class MediaItemInformationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.TransferService.InformationTypeDTO TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.TransferService.InformationTypeDTO Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaItemTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    public enum MediaItemTypeDTO : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Movie = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Book = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Music = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InformationTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    public enum InformationTypeDTO : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Title = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Price = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Picture = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeywordTag = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Genre = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackLength = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Runtime = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfPages = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Author = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Director = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Artist = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CastMember = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReleaseDate = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Language = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationDate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AverageRating = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thumbnail = 18,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransferService.ITransferService")]
    public interface ITransferService {
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadRequest) of message DownloadRequest does not match the default value (DownloadMedia)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadMedia", ReplyAction="http://tempuri.org/ITransferService/DownloadMediaResponse")]
        ShareItServices.TransferService.DownloadResponse DownloadMedia(ShareItServices.TransferService.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadMedia", ReplyAction="http://tempuri.org/ITransferService/DownloadMediaResponse")]
        System.Threading.Tasks.Task<ShareItServices.TransferService.DownloadResponse> DownloadMediaAsync(ShareItServices.TransferService.DownloadRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (UploadRequest) of message UploadRequest does not match the default value (UploadMedia)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadMedia", ReplyAction="http://tempuri.org/ITransferService/UploadMediaResponse")]
        ShareItServices.TransferService.UploadResponse UploadMedia(ShareItServices.TransferService.UploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadMedia", ReplyAction="http://tempuri.org/ITransferService/UploadMediaResponse")]
        System.Threading.Tasks.Task<ShareItServices.TransferService.UploadResponse> UploadMediaAsync(ShareItServices.TransferService.UploadRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ThumbnailUploadRequest) of message ThumbnailUploadRequest does not match the default value (UploadThumbnail)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadThumbnail", ReplyAction="http://tempuri.org/ITransferService/UploadThumbnailResponse")]
        ShareItServices.TransferService.ThumbnailUploadResponse UploadThumbnail(ShareItServices.TransferService.ThumbnailUploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadThumbnail", ReplyAction="http://tempuri.org/ITransferService/UploadThumbnailResponse")]
        System.Threading.Tasks.Task<ShareItServices.TransferService.ThumbnailUploadResponse> UploadThumbnailAsync(ShareItServices.TransferService.ThumbnailUploadRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ShareItServices.TransferService.UserDTO User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int MediaId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ClientToken;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(ShareItServices.TransferService.UserDTO User, int MediaId, string ClientToken) {
            this.User = User;
            this.MediaId = MediaId;
            this.ClientToken = ClientToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long FileByteStreamLength;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileExtension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public DownloadResponse() {
        }
        
        public DownloadResponse(long FileByteStreamLength, string FileExtension, System.IO.Stream FileByteStream) {
            this.FileByteStreamLength = FileByteStreamLength;
            this.FileExtension = FileExtension;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ClientToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long FileByteStreamLength;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ShareItServices.TransferService.MediaItemDTO MetaData;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ShareItServices.TransferService.UserDTO Owner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public UploadRequest() {
        }
        
        public UploadRequest(string ClientToken, long FileByteStreamLength, ShareItServices.TransferService.MediaItemDTO MetaData, ShareItServices.TransferService.UserDTO Owner, System.IO.Stream FileByteStream) {
            this.ClientToken = ClientToken;
            this.FileByteStreamLength = FileByteStreamLength;
            this.MetaData = MetaData;
            this.Owner = Owner;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AssignedMediaItemId;
        
        public UploadResponse() {
        }
        
        public UploadResponse(int AssignedMediaItemId) {
            this.AssignedMediaItemId = AssignedMediaItemId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ThumbnailUploadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ThumbnailUploadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ClientToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long FileByteStreamLength;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileExtension;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int MediaId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ShareItServices.TransferService.UserDTO Owner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public ThumbnailUploadRequest() {
        }
        
        public ThumbnailUploadRequest(string ClientToken, long FileByteStreamLength, string FileExtension, int MediaId, ShareItServices.TransferService.UserDTO Owner, System.IO.Stream FileByteStream) {
            this.ClientToken = ClientToken;
            this.FileByteStreamLength = FileByteStreamLength;
            this.FileExtension = FileExtension;
            this.MediaId = MediaId;
            this.Owner = Owner;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ThumbnailUploadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ThumbnailUploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ThumbnailURL;
        
        public ThumbnailUploadResponse() {
        }
        
        public ThumbnailUploadResponse(string ThumbnailURL) {
            this.ThumbnailURL = ThumbnailURL;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransferServiceChannel : ShareItServices.TransferService.ITransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransferServiceClient : System.ServiceModel.ClientBase<ShareItServices.TransferService.ITransferService>, ShareItServices.TransferService.ITransferService {
        
        public TransferServiceClient() {
        }
        
        public TransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShareItServices.TransferService.DownloadResponse ShareItServices.TransferService.ITransferService.DownloadMedia(ShareItServices.TransferService.DownloadRequest request) {
            return base.Channel.DownloadMedia(request);
        }
        
        public long DownloadMedia(ShareItServices.TransferService.UserDTO User, int MediaId, string ClientToken, out string FileExtension, out System.IO.Stream FileByteStream) {
            ShareItServices.TransferService.DownloadRequest inValue = new ShareItServices.TransferService.DownloadRequest();
            inValue.User = User;
            inValue.MediaId = MediaId;
            inValue.ClientToken = ClientToken;
            ShareItServices.TransferService.DownloadResponse retVal = ((ShareItServices.TransferService.ITransferService)(this)).DownloadMedia(inValue);
            FileExtension = retVal.FileExtension;
            FileByteStream = retVal.FileByteStream;
            return retVal.FileByteStreamLength;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ShareItServices.TransferService.DownloadResponse> ShareItServices.TransferService.ITransferService.DownloadMediaAsync(ShareItServices.TransferService.DownloadRequest request) {
            return base.Channel.DownloadMediaAsync(request);
        }
        
        public System.Threading.Tasks.Task<ShareItServices.TransferService.DownloadResponse> DownloadMediaAsync(ShareItServices.TransferService.UserDTO User, int MediaId, string ClientToken) {
            ShareItServices.TransferService.DownloadRequest inValue = new ShareItServices.TransferService.DownloadRequest();
            inValue.User = User;
            inValue.MediaId = MediaId;
            inValue.ClientToken = ClientToken;
            return ((ShareItServices.TransferService.ITransferService)(this)).DownloadMediaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShareItServices.TransferService.UploadResponse ShareItServices.TransferService.ITransferService.UploadMedia(ShareItServices.TransferService.UploadRequest request) {
            return base.Channel.UploadMedia(request);
        }
        
        public int UploadMedia(string ClientToken, long FileByteStreamLength, ShareItServices.TransferService.MediaItemDTO MetaData, ShareItServices.TransferService.UserDTO Owner, System.IO.Stream FileByteStream) {
            ShareItServices.TransferService.UploadRequest inValue = new ShareItServices.TransferService.UploadRequest();
            inValue.ClientToken = ClientToken;
            inValue.FileByteStreamLength = FileByteStreamLength;
            inValue.MetaData = MetaData;
            inValue.Owner = Owner;
            inValue.FileByteStream = FileByteStream;
            ShareItServices.TransferService.UploadResponse retVal = ((ShareItServices.TransferService.ITransferService)(this)).UploadMedia(inValue);
            return retVal.AssignedMediaItemId;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ShareItServices.TransferService.UploadResponse> ShareItServices.TransferService.ITransferService.UploadMediaAsync(ShareItServices.TransferService.UploadRequest request) {
            return base.Channel.UploadMediaAsync(request);
        }
        
        public System.Threading.Tasks.Task<ShareItServices.TransferService.UploadResponse> UploadMediaAsync(string ClientToken, long FileByteStreamLength, ShareItServices.TransferService.MediaItemDTO MetaData, ShareItServices.TransferService.UserDTO Owner, System.IO.Stream FileByteStream) {
            ShareItServices.TransferService.UploadRequest inValue = new ShareItServices.TransferService.UploadRequest();
            inValue.ClientToken = ClientToken;
            inValue.FileByteStreamLength = FileByteStreamLength;
            inValue.MetaData = MetaData;
            inValue.Owner = Owner;
            inValue.FileByteStream = FileByteStream;
            return ((ShareItServices.TransferService.ITransferService)(this)).UploadMediaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShareItServices.TransferService.ThumbnailUploadResponse ShareItServices.TransferService.ITransferService.UploadThumbnail(ShareItServices.TransferService.ThumbnailUploadRequest request) {
            return base.Channel.UploadThumbnail(request);
        }
        
        public string UploadThumbnail(string ClientToken, long FileByteStreamLength, string FileExtension, int MediaId, ShareItServices.TransferService.UserDTO Owner, System.IO.Stream FileByteStream) {
            ShareItServices.TransferService.ThumbnailUploadRequest inValue = new ShareItServices.TransferService.ThumbnailUploadRequest();
            inValue.ClientToken = ClientToken;
            inValue.FileByteStreamLength = FileByteStreamLength;
            inValue.FileExtension = FileExtension;
            inValue.MediaId = MediaId;
            inValue.Owner = Owner;
            inValue.FileByteStream = FileByteStream;
            ShareItServices.TransferService.ThumbnailUploadResponse retVal = ((ShareItServices.TransferService.ITransferService)(this)).UploadThumbnail(inValue);
            return retVal.ThumbnailURL;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ShareItServices.TransferService.ThumbnailUploadResponse> ShareItServices.TransferService.ITransferService.UploadThumbnailAsync(ShareItServices.TransferService.ThumbnailUploadRequest request) {
            return base.Channel.UploadThumbnailAsync(request);
        }
        
        public System.Threading.Tasks.Task<ShareItServices.TransferService.ThumbnailUploadResponse> UploadThumbnailAsync(string ClientToken, long FileByteStreamLength, string FileExtension, int MediaId, ShareItServices.TransferService.UserDTO Owner, System.IO.Stream FileByteStream) {
            ShareItServices.TransferService.ThumbnailUploadRequest inValue = new ShareItServices.TransferService.ThumbnailUploadRequest();
            inValue.ClientToken = ClientToken;
            inValue.FileByteStreamLength = FileByteStreamLength;
            inValue.FileExtension = FileExtension;
            inValue.MediaId = MediaId;
            inValue.Owner = Owner;
            inValue.FileByteStream = FileByteStream;
            return ((ShareItServices.TransferService.ITransferService)(this)).UploadThumbnailAsync(inValue);
        }
    }
}
