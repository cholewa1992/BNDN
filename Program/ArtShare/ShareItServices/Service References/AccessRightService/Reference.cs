//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShareItServices.AccessRightService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.AccessRightService.UserInformationDTO[] InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.AccessRightService.UserInformationDTO[] Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformationDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class UserInformationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShareItServices.AccessRightService.UserInformationTypeDTO TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShareItServices.AccessRightService.UserInformationTypeDTO Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformationTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    public enum UserInformationTypeDTO : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Firstname = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lastname = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaItemNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class MediaItemNotFound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class UnauthorizedClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class UnauthorizedUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class ArgumentFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessRightNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class AccessRightNotFound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessRightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class AccessRightDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Expiration {
            get {
                return this.ExpirationField;
            }
            set {
                if ((this.ExpirationField.Equals(value) != true)) {
                    this.ExpirationField = value;
                    this.RaisePropertyChanged("Expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaItemId {
            get {
                return this.MediaItemIdField;
            }
            set {
                if ((this.MediaItemIdField.Equals(value) != true)) {
                    this.MediaItemIdField = value;
                    this.RaisePropertyChanged("MediaItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class ObjectNotFound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccessRightService.IAccessRightService")]
    public interface IAccessRightService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/MakeAdmin", ReplyAction="http://tempuri.org/IAccessRightService/MakeAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.MediaItemNotFound), Action="http://tempuri.org/IAccessRightService/MakeAdminMediaItemNotFoundFault", Name="MediaItemNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedClient), Action="http://tempuri.org/IAccessRightService/MakeAdminUnauthorizedClientFault", Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedUser), Action="http://tempuri.org/IAccessRightService/MakeAdminUnauthorizedUserFault", Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ArgumentFault), Action="http://tempuri.org/IAccessRightService/MakeAdminArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IAccessRightService/MakeAdminFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        bool MakeAdmin(ShareItServices.AccessRightService.UserDTO oldAdmin, int newAdminId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/MakeAdmin", ReplyAction="http://tempuri.org/IAccessRightService/MakeAdminResponse")]
        System.Threading.Tasks.Task<bool> MakeAdminAsync(ShareItServices.AccessRightService.UserDTO oldAdmin, int newAdminId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/Delete", ReplyAction="http://tempuri.org/IAccessRightService/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ArgumentFault), Action="http://tempuri.org/IAccessRightService/DeleteArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedClient), Action="http://tempuri.org/IAccessRightService/DeleteUnauthorizedClientFault", Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedUser), Action="http://tempuri.org/IAccessRightService/DeleteUnauthorizedUserFault", Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IAccessRightService/DeleteFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.AccessRightNotFound), Action="http://tempuri.org/IAccessRightService/DeleteAccessRightNotFoundFault", Name="AccessRightNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        bool Delete(ShareItServices.AccessRightService.UserDTO admin, int accessRightId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/Delete", ReplyAction="http://tempuri.org/IAccessRightService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(ShareItServices.AccessRightService.UserDTO admin, int accessRightId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/EditExpiration", ReplyAction="http://tempuri.org/IAccessRightService/EditExpirationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IAccessRightService/EditExpirationFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedClient), Action="http://tempuri.org/IAccessRightService/EditExpirationUnauthorizedClientFault", Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.AccessRightNotFound), Action="http://tempuri.org/IAccessRightService/EditExpirationAccessRightNotFoundFault", Name="AccessRightNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ArgumentFault), Action="http://tempuri.org/IAccessRightService/EditExpirationArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedUser), Action="http://tempuri.org/IAccessRightService/EditExpirationUnauthorizedUserFault", Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        bool EditExpiration(ShareItServices.AccessRightService.UserDTO user, ShareItServices.AccessRightService.AccessRightDTO newAccessRight, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/EditExpiration", ReplyAction="http://tempuri.org/IAccessRightService/EditExpirationResponse")]
        System.Threading.Tasks.Task<bool> EditExpirationAsync(ShareItServices.AccessRightService.UserDTO user, ShareItServices.AccessRightService.AccessRightDTO newAccessRight, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/Purchase", ReplyAction="http://tempuri.org/IAccessRightService/PurchaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ArgumentFault), Action="http://tempuri.org/IAccessRightService/PurchaseArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedUser), Action="http://tempuri.org/IAccessRightService/PurchaseUnauthorizedUserFault", Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedClient), Action="http://tempuri.org/IAccessRightService/PurchaseUnauthorizedClientFault", Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IAccessRightService/PurchaseFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.MediaItemNotFound), Action="http://tempuri.org/IAccessRightService/PurchaseMediaItemNotFoundFault", Name="MediaItemNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        bool Purchase(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, System.Nullable<System.DateTime> expiration, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/Purchase", ReplyAction="http://tempuri.org/IAccessRightService/PurchaseResponse")]
        System.Threading.Tasks.Task<bool> PurchaseAsync(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, System.Nullable<System.DateTime> expiration, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/GetPurchaseHistory", ReplyAction="http://tempuri.org/IAccessRightService/GetPurchaseHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IAccessRightService/GetPurchaseHistoryFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ObjectNotFound), Action="http://tempuri.org/IAccessRightService/GetPurchaseHistoryObjectNotFoundFault", Name="ObjectNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ArgumentFault), Action="http://tempuri.org/IAccessRightService/GetPurchaseHistoryArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedClient), Action="http://tempuri.org/IAccessRightService/GetPurchaseHistoryUnauthorizedClientFault", Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedUser), Action="http://tempuri.org/IAccessRightService/GetPurchaseHistoryUnauthorizedUserFault", Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        ShareItServices.AccessRightService.AccessRightDTO[] GetPurchaseHistory(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/GetPurchaseHistory", ReplyAction="http://tempuri.org/IAccessRightService/GetPurchaseHistoryResponse")]
        System.Threading.Tasks.Task<ShareItServices.AccessRightService.AccessRightDTO[]> GetPurchaseHistoryAsync(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/GetUploadHistory", ReplyAction="http://tempuri.org/IAccessRightService/GetUploadHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IAccessRightService/GetUploadHistoryFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ObjectNotFound), Action="http://tempuri.org/IAccessRightService/GetUploadHistoryObjectNotFoundFault", Name="ObjectNotFound", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedUser), Action="http://tempuri.org/IAccessRightService/GetUploadHistoryUnauthorizedUserFault", Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedClient), Action="http://tempuri.org/IAccessRightService/GetUploadHistoryUnauthorizedClientFault", Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ArgumentFault), Action="http://tempuri.org/IAccessRightService/GetUploadHistoryArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        ShareItServices.AccessRightService.AccessRightDTO[] GetUploadHistory(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/GetUploadHistory", ReplyAction="http://tempuri.org/IAccessRightService/GetUploadHistoryResponse")]
        System.Threading.Tasks.Task<ShareItServices.AccessRightService.AccessRightDTO[]> GetUploadHistoryAsync(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/CanDownload", ReplyAction="http://tempuri.org/IAccessRightService/CanDownloadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedUser), Action="http://tempuri.org/IAccessRightService/CanDownloadUnauthorizedUserFault", Name="UnauthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.UnauthorizedClient), Action="http://tempuri.org/IAccessRightService/CanDownloadUnauthorizedClientFault", Name="UnauthorizedClient", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(ShareItServices.AccessRightService.ArgumentFault), Action="http://tempuri.org/IAccessRightService/CanDownloadArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.FaultDataContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IAccessRightService/CanDownloadFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        bool CanDownload(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessRightService/CanDownload", ReplyAction="http://tempuri.org/IAccessRightService/CanDownloadResponse")]
        System.Threading.Tasks.Task<bool> CanDownloadAsync(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, string clientToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccessRightServiceChannel : ShareItServices.AccessRightService.IAccessRightService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccessRightServiceClient : System.ServiceModel.ClientBase<ShareItServices.AccessRightService.IAccessRightService>, ShareItServices.AccessRightService.IAccessRightService {
        
        public AccessRightServiceClient() {
        }
        
        public AccessRightServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccessRightServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessRightServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessRightServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool MakeAdmin(ShareItServices.AccessRightService.UserDTO oldAdmin, int newAdminId, string clientToken) {
            return base.Channel.MakeAdmin(oldAdmin, newAdminId, clientToken);
        }
        
        public System.Threading.Tasks.Task<bool> MakeAdminAsync(ShareItServices.AccessRightService.UserDTO oldAdmin, int newAdminId, string clientToken) {
            return base.Channel.MakeAdminAsync(oldAdmin, newAdminId, clientToken);
        }
        
        public bool Delete(ShareItServices.AccessRightService.UserDTO admin, int accessRightId, string clientToken) {
            return base.Channel.Delete(admin, accessRightId, clientToken);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(ShareItServices.AccessRightService.UserDTO admin, int accessRightId, string clientToken) {
            return base.Channel.DeleteAsync(admin, accessRightId, clientToken);
        }
        
        public bool EditExpiration(ShareItServices.AccessRightService.UserDTO user, ShareItServices.AccessRightService.AccessRightDTO newAccessRight, string clientToken) {
            return base.Channel.EditExpiration(user, newAccessRight, clientToken);
        }
        
        public System.Threading.Tasks.Task<bool> EditExpirationAsync(ShareItServices.AccessRightService.UserDTO user, ShareItServices.AccessRightService.AccessRightDTO newAccessRight, string clientToken) {
            return base.Channel.EditExpirationAsync(user, newAccessRight, clientToken);
        }
        
        public bool Purchase(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, System.Nullable<System.DateTime> expiration, string clientToken) {
            return base.Channel.Purchase(user, mediaItemId, expiration, clientToken);
        }
        
        public System.Threading.Tasks.Task<bool> PurchaseAsync(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, System.Nullable<System.DateTime> expiration, string clientToken) {
            return base.Channel.PurchaseAsync(user, mediaItemId, expiration, clientToken);
        }
        
        public ShareItServices.AccessRightService.AccessRightDTO[] GetPurchaseHistory(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken) {
            return base.Channel.GetPurchaseHistory(user, userId, clientToken);
        }
        
        public System.Threading.Tasks.Task<ShareItServices.AccessRightService.AccessRightDTO[]> GetPurchaseHistoryAsync(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken) {
            return base.Channel.GetPurchaseHistoryAsync(user, userId, clientToken);
        }
        
        public ShareItServices.AccessRightService.AccessRightDTO[] GetUploadHistory(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken) {
            return base.Channel.GetUploadHistory(user, userId, clientToken);
        }
        
        public System.Threading.Tasks.Task<ShareItServices.AccessRightService.AccessRightDTO[]> GetUploadHistoryAsync(ShareItServices.AccessRightService.UserDTO user, int userId, string clientToken) {
            return base.Channel.GetUploadHistoryAsync(user, userId, clientToken);
        }
        
        public bool CanDownload(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, string clientToken) {
            return base.Channel.CanDownload(user, mediaItemId, clientToken);
        }
        
        public System.Threading.Tasks.Task<bool> CanDownloadAsync(ShareItServices.AccessRightService.UserDTO user, int mediaItemId, string clientToken) {
            return base.Channel.CanDownloadAsync(user, mediaItemId, clientToken);
        }
    }
}
